 pipeline {
     agent any
     tools {
        maven 'Maven3'
    }
    environment {
    registry = "037572033749.dkr.ecr.eu-north-1.amazonaws.com/gloswitch237"
     }
    
    stages {
         stage('Cloning Git') {
             steps {
               checkout([$class: 'GitSCM', branches: [ [ name: '*/master' ] ], doGenerateSubmoduleConfigurations:
               false, extensions: [ ], submoduleCfg: [ ], userRemoteConfigs: [ [ credentialsId: '', url: 'https://github.com/oskul2021/GloSwitch-CM237.git' ] ] ])
            }
        }
         stage ('Build jar') {
            steps {
              sh 'mvn package'
            }
         }
         // Building Docker images
         stage('Building image') {
           steps{
             script {
               dockerImage = docker.build registry
               dockerImage.tag("$BUILD_NUMBER")
             }
           }
         }

           // Uploading Docker images into AWS ECR
         stage('Pushing to ECR') {
            steps{
              script {
                sh 'aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 037572033749.dkr.ecr.eu-north-1.amazonaws.com'
                sh 'docker push 037572033749.dkr.ecr.eu-north-1.amazonaws.com/gloswitch237:latest:$BUILD_NUMBER'
              }
            }
         }
         stage ('Helm Deploy') {
            steps {
              script {
                sh "helm upgrade first --install mychart --namespace helm-deployment --set image.tag=$BUILD_NUMBER"
              }
